{"ast":null,"code":"var _jsxFileName = \"F:\\\\Podlivsky Client\\\\podlivsky\\\\src\\\\components\\\\Music\\\\VideoPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Youtube from 'react-youtube';\n\nconst VideoPage = props => {\n  const {\n    id\n  } = props.match.params;\n  const [video, setVideo] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`https://localhost:5001/api/Video/${id}`);\n      setVideo(response.data.video);\n      setLoading(false);\n      console.log(video);\n    };\n\n    fetchData();\n  }, []);\n  console.log(id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Youtube, {\n    id: id,\n    videoId: video.youtubeLink.split('?v=')[1],\n    className: \"w-100 mt-3\",\n    containerClassName: \"yt-container mb-5\",\n    opts: {\n      height: '720'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default VideoPage;","map":{"version":3,"sources":["F:/Podlivsky Client/podlivsky/src/components/Music/VideoPage.js"],"names":["React","useState","useEffect","axios","Youtube","VideoPage","props","id","match","params","video","setVideo","loading","setLoading","fetchData","response","get","data","console","log","youtubeLink","split","height"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,EAAjC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,IAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,oCAAmCT,EAAG,EAAjD,CAAvB;AACAI,MAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAT,CAAcP,KAAf,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,KALD;;AAMAI,IAAAA,SAAS;AACZ,GARQ,EAQP,EARO,CAAT;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYZ,EAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,OAAO,gBACP;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,gBAGP,oBAAC,OAAD;AACA,IAAA,EAAE,EAAEL,EADJ;AAEA,IAAA,OAAO,EAAEG,KAAK,CAACU,WAAN,CAAkBC,KAAlB,CAAwB,KAAxB,EAA+B,CAA/B,CAFT;AAGA,IAAA,SAAS,EAAC,YAHV;AAIA,IAAA,kBAAkB,EAAC,mBAJnB;AAKA,IAAA,IAAI,EAAG;AACHC,MAAAA,MAAM,EAAE;AADL,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ;AAoBH,CArCD;;AAuCA,eAAejB,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios  from \"axios\";\r\nimport Youtube from 'react-youtube';\r\n\r\nconst VideoPage = (props) => {\r\n    \r\n    const { id } = props.match.params;\r\n    const [video,setVideo] = useState();\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get(`https://localhost:5001/api/Video/${id}`);\r\n            setVideo(response.data.video);\r\n            setLoading(false);\r\n            console.log(video);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    console.log(id);\r\n    return (\r\n        <div className=\"page\">\r\n            {\r\n                loading ? \r\n                <p className=\"text-white\">Loading...</p> :\r\n\r\n                <Youtube \r\n                id={id}\r\n                videoId={video.youtubeLink.split('?v=')[1]}\r\n                className=\"w-100 mt-3\"\r\n                containerClassName=\"yt-container mb-5\"\r\n                opts= {{\r\n                    height: '720'\r\n                }}\r\n\r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPage\r\n"]},"metadata":{},"sourceType":"module"}