{"ast":null,"code":"var _jsxFileName = \"F:\\\\Podlivsky Client\\\\podlivsky\\\\src\\\\components\\\\Music\\\\Grid.js\";\nimport React from 'react';\nimport Row from './Row';\n\nconst Grid = props => {\n  const {\n    data\n  } = props;\n  const odd = data.length % 2;\n  console.log(odd);\n  let i = 0;\n  const video = data[0];\n  ;\n  let array = [];\n\n  function logic() {\n    if (odd) {\n      data.shift();\n    }\n\n    for (let i = 0; i < data.length; i = i + 2) {\n      array.push({\n        video1: data[i],\n        video2: data[i + 1],\n        odd: i % 4 === 0\n      });\n    }\n\n    i = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, logic(), odd ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    video1: video,\n    video2: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), array.map(pairs => /*#__PURE__*/React.createElement(Row, {\n    key: i++,\n    video1: pairs.video1,\n    video2: pairs.video2,\n    odd: pairs.odd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, array.map(pairs => /*#__PURE__*/React.createElement(Row, {\n    key: i++,\n    video1: pairs.video1,\n    video2: pairs.video2,\n    odd: pairs.odd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }))));\n};\n\nexport default Grid;","map":{"version":3,"sources":["F:/Podlivsky Client/podlivsky/src/components/Music/Grid.js"],"names":["React","Row","Grid","props","data","odd","length","console","log","i","video","array","logic","shift","push","video1","video2","undefined","map","pairs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,GAAG,GAAGD,IAAI,CAACE,MAAL,GAAc,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,MAAII,CAAC,GAAG,CAAR;AACA,QAAMC,KAAK,GAAGN,IAAI,CAAC,CAAD,CAAlB;AAAsB;AACtB,MAAIO,KAAK,GAAG,EAAZ;;AAEA,WAASC,KAAT,GAAiB;AACb,QAAIP,GAAJ,EAAS;AACLD,MAAAA,IAAI,CAACS,KAAL;AACH;;AACD,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACE,MAAzB,EAAiCG,CAAC,GAAGA,CAAC,GAAG,CAAzC,EAA4C;AACxCE,MAAAA,KAAK,CAACG,IAAN,CAAW;AACPC,QAAAA,MAAM,EAAEX,IAAI,CAACK,CAAD,CADL;AAEPO,QAAAA,MAAM,EAAEZ,IAAI,CAACK,CAAC,GAAG,CAAL,CAFL;AAGPJ,QAAAA,GAAG,EAAEI,CAAC,GAAG,CAAJ,KAAU;AAHR,OAAX;AAKH;;AACDA,IAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQG,KAAK,EAHb,EAMQP,GAAG,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAEK,KAAb;AAAoB,IAAA,MAAM,EAAEO,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGQN,KAAK,CAACO,GAAN,CAAUC,KAAK,iBACX,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEV,CAAC,EAAX;AAAe,IAAA,MAAM,EAAEU,KAAK,CAACJ,MAA7B;AAAqC,IAAA,MAAM,EAAEI,KAAK,CAACH,MAAnD;AAA2D,IAAA,GAAG,EAAEG,KAAK,CAACd,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CADD,gBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQM,KAAK,CAACO,GAAN,CAAUC,KAAK,iBACX,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEV,CAAC,EAAX;AAAe,IAAA,MAAM,EAAEU,KAAK,CAACJ,MAA7B;AAAqC,IAAA,MAAM,EAAEI,KAAK,CAACH,MAAnD;AAA2D,IAAA,GAAG,EAAEG,KAAK,CAACd,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CAhBZ,CADJ;AA8BH,CAnDD;;AAsDA,eAAeH,IAAf","sourcesContent":["import React from 'react'\r\nimport Row from './Row';\r\n\r\nconst Grid = (props) => {\r\n    const { data } = props;\r\n    const odd = data.length % 2;\r\n    console.log(odd);\r\n    let i = 0;\r\n    const video = data[0];;\r\n    let array = []\r\n\r\n    function logic() {\r\n        if (odd) {\r\n            data.shift();\r\n        }\r\n        for (let i = 0; i < data.length; i = i + 2) {\r\n            array.push({\r\n                video1: data[i],\r\n                video2: data[i + 1],\r\n                odd: i % 4 === 0\r\n            });\r\n        }\r\n        i = 0;\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                logic()\r\n            }\r\n            {\r\n                odd ?\r\n                    <div>\r\n                        <Row video1={video} video2={undefined} />\r\n                        {\r\n                            array.map(pairs => (\r\n                                <Row key={i++} video1={pairs.video1} video2={pairs.video2} odd={pairs.odd} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        {\r\n\r\n                            array.map(pairs => (\r\n                                <Row key={i++} video1={pairs.video1} video2={pairs.video2} odd={pairs.odd} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Grid"]},"metadata":{},"sourceType":"module"}