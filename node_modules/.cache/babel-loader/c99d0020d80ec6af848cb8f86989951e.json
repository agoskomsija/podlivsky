{"ast":null,"code":"var _jsxFileName = \"F:\\\\Podlivsky Client\\\\podlivsky\\\\src\\\\components\\\\Music\\\\VideoPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Youtube from 'react-youtube';\nimport Loading from '../Loading';\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport NotFound from '../NotFound';\n\nconst VideoPage = props => {\n  const {\n    id\n  } = props.match.params;\n  const [video, setVideo] = useState();\n  const [loading, setLoading] = useState(true);\n  const [found, setFound] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`https://localhost:5001/api/Videos/${id}`);\n        setFound(true);\n        setVideo(response.data.video);\n        setLoading(false);\n      } catch {\n        setLoading(false);\n        setFound(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }) : found ? /*#__PURE__*/React.createElement(Scrollbars, {\n    autoHeight: true,\n    autoHeightMin: `calc(100vh - 120px)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Youtube, {\n    id: id,\n    videoId: video.youtubeLink.split('?v=')[1],\n    className: \"w-100 mt-3\",\n    containerClassName: \"yt-container mb-5\",\n    opts: {\n      height: '720'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }));\n};\n\nexport default VideoPage;","map":{"version":3,"sources":["F:/Podlivsky Client/podlivsky/src/components/Music/VideoPage.js"],"names":["React","useState","useEffect","axios","Youtube","Loading","Scrollbars","NotFound","VideoPage","props","id","match","params","video","setVideo","loading","setLoading","found","setFound","fetchData","response","get","data","youtubeLink","split","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,SAAS,GAAG,YAAY;AAC1B,UAAI;AAEA,cAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,qCAAoCX,EAAG,EAAlD,CAAvB;AACAQ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,QAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAT,CAAcT,KAAf,CAAR;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAND,CAOA,MACA;AACIA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,KAbD;;AAcAC,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,OAAO,gBACH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAEHE,KAAK,gBACL,oBAAC,UAAD;AAAY,IAAA,UAAU,MAAtB;AAAuB,IAAA,aAAa,EAAG,qBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,OAAD;AACI,IAAA,EAAE,EAAEP,EADR;AAEI,IAAA,OAAO,EAAEG,KAAK,CAACU,WAAN,CAAkBC,KAAlB,CAAwB,KAAxB,EAA+B,CAA/B,CAFb;AAGI,IAAA,SAAS,EAAC,YAHd;AAII,IAAA,kBAAkB,EAAC,mBAJvB;AAKI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE;AADN,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADK,gBAcH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBd,CADJ;AAwBH,CAjDD;;AAmDA,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport Youtube from 'react-youtube';\r\nimport Loading from '../Loading';\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport NotFound from '../NotFound';\r\nconst VideoPage = (props) => {\r\n\r\n    const { id } = props.match.params;\r\n    const [video, setVideo] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [found, setFound] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n\r\n                const response = await axios.get(`https://localhost:5001/api/Videos/${id}`);\r\n                setFound(true);\r\n                setVideo(response.data.video);\r\n                setLoading(false);\r\n            }\r\n            catch \r\n            {\r\n                setLoading(false);\r\n                setFound(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {\r\n                loading ?\r\n                    <Loading /> :\r\n                    found ? \r\n                    <Scrollbars autoHeight autoHeightMin={`calc(100vh - 120px)`}>\r\n\r\n                        <Youtube\r\n                            id={id}\r\n                            videoId={video.youtubeLink.split('?v=')[1]}\r\n                            className=\"w-100 mt-3\"\r\n                            containerClassName=\"yt-container mb-5\"\r\n                            opts={{\r\n                                height: '720'\r\n                            }}\r\n\r\n                        />\r\n                    </Scrollbars>\r\n                    : <NotFound />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPage\r\n"]},"metadata":{},"sourceType":"module"}